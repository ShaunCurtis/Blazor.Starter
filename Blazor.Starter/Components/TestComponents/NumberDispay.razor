<h3>NumberDispay</h3>
<div class="container m-2 px-3 p-t bg-info text-white">
    <div class="row">
        <div class="col-2">Number</div>
        <div class="col-2">@this.displayValue</div>
    </div>
    <div class="row bg-dark mt-2">
        <div class="col-3">
            Initialized:
        </div>
        <div class="col-1">
            @this.InitRun
        </div>
        <div class="col-3">
            Params Set:
        </div>
        <div class="col-1">
            @this.ParamsSetRun
        </div>
        <div class="col-3">
            Rendered:
        </div>
        <div class="col-1">
            @this.Rendered
        </div>
    </div>
</div>
@ChildContent



@code {

    [Inject] private RandomNumberService RdmService { get; set; }

    private int displayValue => RdmService.Value;

    [Parameter] public RenderFragment ChildContent { get; set; }
    protected override Task OnInitializedAsync()
    {
        this.InitRun++;
        return base.OnInitializedAsync();
    }

    private async void OnNumberChange(object sender, EventArgs e)
        => await this.InvokeAsync(StateHasChanged);

    private int InitRun = 0;
    private int ParamsSetRun = 0;
    private int Rendered = 1;

    protected override Task OnParametersSetAsync()
    {
        this.ParamsSetRun++;
        return base.OnParametersSetAsync();
    }

    protected override bool ShouldRender()
    {
        Rendered++;
        return true;
    }

}
