@page "/basiceditor"
<BasicEditorCard EditContext="_EditContext" OnValidSubmit="ValidatedSubmit">
    <input type="text" @bind-value="model.Value" />
</BasicEditorCard>

@code {

    public class Model
    {
        public string Email { get; set; }

        public string Value
        {
            get => _value != 0 ? _value.ToString() : string.Empty;
            set
            {
                if (int.TryParse(value, out int pvalue))
                    _value = pvalue;
                else
                    _value = 0;
            }
        }

        private int _value;
    }

    private EditContext _EditContext;

    private Model model { get; set; } = new Model() { Email = "me@you.com" };

    protected override Task OnInitializedAsync()
    {
        _EditContext = new EditContext(model);
        return base.OnInitializedAsync();
    }

    private Task ValidateSubmit()
    {
        if (_EditContext.Validate())
            return Task.CompletedTask;
        return Task.CompletedTask;
    }

    private Task ValidatedSubmit(EditContext editContext)
    {
        return Task.CompletedTask;
    }
}
